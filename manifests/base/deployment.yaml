apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-watcher
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-watcher
      app.kubernetes.io/instance: k8s-watcher
  template:
    metadata:
      annotations:
        checksum/config: 464460024ca7f0df1e56d4b0d2db144da5f6f84acf741df64a281d355bae2c6e
      labels:
        app.kubernetes.io/name: k8s-watcher
        app.kubernetes.io/instance: k8s-watcher
    spec:
      serviceAccountName: k8s-watcher
      containers:
        - name: k8s-watcher
          image: "komodorio/k8s-watcher:0.1.46"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1
              memory: 4Gi
            requests:
              cpu: 0.25
              memory: 256Mi
          volumeMounts:
            - name: configuration
              mountPath: /etc/komodor
            - name: podinfo
              mountPath: /etc/podinfo
          envFrom:
            - configMapRef:
                name: k8s-watcher-config 
          env:
            - name: KOMOKW_API_KEY
              valueFrom:
                secretKeyRef:
                  name: k8s-watcher-secret
                  key: KOMOKW_API_KEY
          ports:
            - name: http-healthz
              containerPort: 8090
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
      volumes:
        - name: configuration
          configMap:
            name: k8s-watcher-config
            items:
              - key: komodor-k8s-watcher.yaml
                path: komodor-k8s-watcher.yaml
        - name: podinfo
          downwardAPI:
            items:
              - path: "mem_limit"
                resourceFieldRef:
                  containerName: k8s-watcher
                  resource: limits.memory
                  divisor: 1Mi
